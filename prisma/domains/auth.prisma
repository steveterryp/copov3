model User {
  id               String     @id @default(cuid())
  name             String
  email            String     @unique
  password         String
  role             UserRole   @default(USER)
  status           UserStatus @default(ACTIVE)
  lastLogin        DateTime?
  resetTokenHash   String?
  resetTokenExpiry DateTime?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt

  // Relations
  customRole       Role?           @relation(fields: [customRoleId], references: [id])
  customRoleId     String?
  ownedPOVs        POV[]          @relation("POVOwner")
  teamMembers      TeamMember[]
  activities       Activity[]
  notifications    Notification[]
  assignedTasks    Task[]         @relation("TaskAssignee")
  comments         Comment[]
  taskActivities   TaskActivity[]
  refreshTokens    RefreshToken[]
  settings         UserSettings?
  supportRequests  SupportRequest[]
  featureRequests  FeatureRequest[]
}

model Role {
  id          String   @id @default(cuid())
  name        String   @unique
  permissions String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  createdAt DateTime @default(now())
  expiresAt DateTime

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

